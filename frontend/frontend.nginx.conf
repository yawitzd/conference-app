server {
  # Listen on port 80 for connections
  listen 80;

  # Serve static files from this directory
  root /usr/share/nginx/html;

  # If the files don't exist, just send the contents of
  # index.html. This is normal SPA behavior.
  location / {
    try_files $uri /index.html =404;
  }

  # Add security headers for all responses
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  # Forward all path requests for /api/ to the
  # backend server using the prefix
  # http://backend/api/ which can be seen in the
  # proxy_pass directive. The rest of the directives
  # allow the backend to get the headers it wants
  # to do cool things.
  #
  # The hostname "backend" is the name of the service
  # as declared in the docker-compose file.
  location /api/ {
    proxy_pass              http://backend/api/;
    proxy_http_version      1.1;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection keep-alive;
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_cache_bypass      $http_upgrade;
  }

  # # Here's an example of how to forward a specific subpath
  # # to a microservices. It will convert calls to the Nginx server
  # # from
  # #   GET http://server/api/badges
  # # to a call to your microservices like this
  # #   GET http://badges/api/badges
  # # For more information on whether to use trailing slashes or not,
  # # please read https://dev.to/danielkun/nginx-everything-about-proxypass-2ona
  #
  # location /api/badges {
  #   proxy_pass              http://badges/api/badges;
  #   proxy_http_version      1.1;
  #   proxy_set_header        Upgrade $http_upgrade;
  #   proxy_set_header        Connection keep-alive;
  #   proxy_set_header        Host $host;
  #   proxy_set_header        X-Real-IP $remote_addr;
  #   proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header        X-Forwarded-Proto $scheme;
  #   proxy_cache_bypass      $http_upgrade;
  # }
}
